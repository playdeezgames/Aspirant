At Start of Jam:
  ☐ make new git repo
  ☐ make itch game page stub
  ☐ Pick a name
    ravager
    plunderer
    maurauder
    pillager
    looter
    raider
    freebooter
To Complete Required Features for Jam:
  ☐ "Essentially modeless" with a fixed 3D perspective.
    (The game must have first-person exploration at all times. Exceptions are point to point overworld map movement (fast travel), combat screens or town screens.)
  ☐ An initially unknown explorable map. 
    (The game must have explorable locations. It doesn't have to be a dungeon in the traditional sense. It can be urban environments, outdoors, spaceship interiors, planetary surfaces etc. Whichever environment the game has it must be viewed and explored in first-person.)
  ☐ Entities occupy the entire tile, and only one tile at a time.
    (The game must have instant step movement on a grid. Smooth transition between grid squares is allowed. Half-steps or dividing the square into smaller squares is not accepted.)
  ☐ The grid is 2D with square tiles. 
    (The game must have 90 degree turns in the cardinal directions, North, East, South, West. Smooth transition between 90 degree angles is allowed. Mouse-look is also allowed. Games which let you turn 90 degrees up and down are also allowed.)
  ☐ First Person POV.
    (The game must have a player controlled character (or party of characters), or the abstraction of a character or persona.)
  ☐ Resource management and vital statistics.
    (The game must at the very least have some basic stats. (Minimum a single health/power bar))
  ☐ Failure condition.
    (The game must have a death/perish condition, or some other end-of-game mechanic.)
  ☐ A way of replenishing resources and vital statistics.
    (The game must have at least one way to affect character stat(s). Examples are resting, potions, items with bonuses, food, water, powerups etc.)
  ☐ Decisions by which risking resources can gain other resources.
    (The game must have combat or a similar mechanic for determining outcome of certain situations, enemy encounters and events.)
  ☐ No offensive themes
     (Any theme is allowed, but keep it decent and safe for work)

Archive:
  ✔ Context.* @done(21-03-30 11:17) @project(Remove(in a branch))
  ✔ Game.* @done(21-03-30 11:17) @project(Remove(in a branch))
  ✔ UIState - @done(21-03-30 11:17) @project(Remove(in a branch))
  ✔ anything after START_GAME @done(21-03-30 08:39) @project(Remove(in a branch))
  ✔ State.Editor.* @done(21-03-30 11:17) @project(Remove(in a branch))
  ✔ State.Player.* @done(21-03-30 11:17) @project(Remove(in a branch))
  ✔ Renderer.* @done(21-03-30 11:17) @project(Remove(in a branch))
  ✔ store a list of updaters for a state in application intead of only having one! @done(21-03-29 05:21) @project(Sort Out)
  ✘ I do not have the ability to delete a room in a scenario @cancelled(21-03-29 05:21) @project(Bugs)
    this is important to be able to do
    need a confirm dialog
  ✔ i want the value of the menu item, not just the index @done(21-03-29 05:21) @project(Bugs)
  ✔ game::ScenarioDescriptors::Get needs to return optional @done(21-03-29 11:10) @project(Bugs)
  ✔ switch to x64 @done(21-03-29 07:38) @project(Bugs)
  ✔ handle mouse movement @done(21-03-29 16:18) @project(Features)
  ✔ handle mouse button clicks @done(21-03-29 16:56) @project(Features)
  ✔ handle mouse wheel @done(21-03-29 16:56) @project(Features)
  ✔ handle controller input @done(21-03-29 07:39) @project(Features)
  ✔ layout names do not really reflect the corresponding namespaces in the code @done(21-03-27 18:34) @project(Sort Out)
  ✔ Splash @done(21-03-27 18:24) @project(Sort Out)
  ✔ MainMenu @done(21-03-27 17:35) @project(Sort Out)
  ✔ About @done(21-03-27 18:34) @project(Sort Out)
  ✔ ConfirmQuit @done(21-03-27 18:34) @project(Sort Out)
  ✔ Options @done(21-03-27 18:34) @project(Sort Out)
  ✔ StartGame @done(21-03-27 18:24) @project(Sort Out)
  ✔ StartEditor @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditScenarioSelector @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditScenario @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditPickRoom @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditNewRoom @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditScenarioDescriptor @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditNavigateRoom @done(21-03-27 18:22) @project(Sort Out)
  ✔ RoomViewPosition @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditDescriptorSelector @done(21-03-27 18:22) @project(Sort Out)
  ✔ StartPlayer @done(21-03-27 18:25) @project(Sort Out)
  ✔ PlayerNewGame @done(21-03-27 18:34) @project(Sort Out)
  ✔ PlayerLoadGame @done(21-03-27 18:34) @project(Sort Out)
  ✔ EditAvatar @done(21-03-27 18:34) @project(Sort Out)
  ✔ remove spaghetti menu @done(21-03-28 05:44) @project(Sort Out)
  ✔ confirm quit @done(21-03-28 04:28) @project(Sort Out)
  ✔ main menu @done(21-03-28 04:20) @project(Sort Out)
  ✔ options @done(21-03-28 04:46) @project(Sort Out)
  ✔ start game @done(21-03-28 04:53) @project(Sort Out)
  ✔ start editor @done(21-03-28 04:59) @project(Sort Out)
  ✔ start play @done(21-03-28 05:19) @project(Sort Out)
  ✔ avatar editor @done(21-03-28 05:19) @project(Sort Out)
  ✔ new room @done(21-03-28 05:29) @project(Sort Out)
  ✔ edit scenario @done(21-03-28 05:37) @project(Sort Out)
  ✔ edit scenario descriptor @done(21-03-28 05:44) @project(Sort Out)
  ✔ set text values directly on layouts instead of proxying through data::String @done(21-03-29 05:01) @project(Sort Out)
  ✔ EditScenarioSelector @done(21-03-28 07:17) @project(Sort Out)
  ✔ EditScenario @done(21-03-29 05:01) @project(Sort Out)
  ✔ EditPickRoom @done(21-03-29 05:01) @project(Sort Out)
  ✔ EditNewRoom @done(21-03-29 05:01) @project(Sort Out)
  ✔ EditScenarioDescriptor @done(21-03-29 05:01) @project(Sort Out)
  ✔ RoomViewPosition @done(21-03-29 05:01) @project(Sort Out)
  ✔ EditAvatar @done(21-03-29 05:01) @project(Sort Out)
  ✔ eliminate data setters @done(21-03-29 05:01) @project(Sort Out)
  ✔ strings @done(21-03-29 05:01) @project(Sort Out)
  ✔ ints @done(21-03-29 05:01) @project(Sort Out)
  ✔ bools @done(21-03-29 05:01) @project(Sort Out)
  ✔ data stores are config stores, so rename the namespaces @done(21-03-29 05:01) @project(Sort Out)
  ✔ string @done(21-03-29 05:01) @project(Sort Out)
  ✔ int @done(21-03-29 05:01) @project(Sort Out)
  ✔ bool @done(21-03-29 05:01) @project(Sort Out)
  ✔ data proxies are no longer necessary @done(21-03-29 05:01) @project(Sort Out)
  ✔ string @done(21-03-29 05:01) @project(Sort Out)
  ✔ int @done(21-03-29 05:01) @project(Sort Out)
  ✔ bool @done(21-03-29 05:01) @project(Sort Out)
  ✘ alphabetize #include files @cancelled(21-03-29 05:01) @project(Sort Out)
    "nice to have, make for neat looking code"
  ✔ I cannot attempt to "open" a scenario when there are no scenarios @done(21-03-27 16:31) @project(Bugs)
  ✔ In a freshly created scenario, attempting to edit the avatar crashes the game @done(21-03-27 16:23) @project(Bugs)
  ✔ When I edit a scenario descriptor, it does not save. @done(21-03-27 16:28) @project(Bugs)
  ✘ I do not have the ability to delete a scenario @cancelled(21-03-27 16:29) @project(Bugs)
    do i want to?
    do i have to have a confirm delete dialog?
  ✘ the index of a menu in a layout cannot be proxied from a data int @cancelled(21-03-28 06:37) @project(Clunk)
